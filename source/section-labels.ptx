<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-labels" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Labels</title>

  <introduction>
    <p> It can be helpful to label a graphical component in a diagram
    to call attention to that component and to connect it to the
    exposition in the surrounding text.  PreFigure allows authors to
    add labels to a diagram and provides some options for their
    display.  
    </p>

  </introduction>

  <subsection>
    <title> Creating labels </title>

  <p>The <tag>label</tag> element provides a way of adding text to a
  diagram.  Labels are composed of plain text, mathematics, or a
  combination of both.  Mathematics is written in
  <latex/> and enclosed in an <tag>m</tag> element.  <xref
  ref="diagram-label-example"/> demonstrates some possibilities with
  the PreFigure source given in <xref ref="listing-label-example"/>.
  </p>

  <figure xml:id="diagram-label-example">
    <sidebyside width="50%">
      <image source="images/label-example"/>
    </sidebyside>
    <caption>Some sample labels.</caption>
  </figure>

  <listing xml:id="listing-label-example">
    <program>
      <input><xi:include href="code/label-example.xml"
      parse="text"/></input>
    </program>
    <caption>The PreFigure source for <xref
    ref="diagram-label-example"/>.</caption>
  </listing>

  <p>Labels can span multiple lines and include bold and italic fonts,
  as shown in <xref ref="diagram-labels-lines"/> and <xref
  ref="listing-labels-lines"/>.  While this provides a lot of
  flexibility, authors should use these features judiciously and make
  sure text that more properly belongs in surrounding paragraphs
  does not creep into a diagram.
  </p>

  <figure xml:id="diagram-labels-lines">
    <sidebyside width="70%">
      <image source="images/labels-lines"/>
    </sidebyside>
    <caption>Some sample labels.</caption>
  </figure>

  <listing xml:id="listing-labels-lines">
    <program>
      <input><xi:include href="code/labels-lines.xml"
      parse="text"/></input>
    </program>
    <caption>The PreFigure source for <xref
    ref="diagram-label-example"/>.</caption>
  </listing>

  <p> Here are some important attributes that determine the placement
  of labels.
  <dl>
    <li><title>anchor</title>

    <p>The label is placed relative to an <attr>anchor</attr> point
    with the default being <attr>anchor="(0,0)"</attr>.
    </p>
    </li>

    <li><title>alignment</title>
    <p> The <attr>alignment</attr> attribute specifies how the label
    is positioned relative to the anchor point.  <xref
    ref="diagram-alignments"/> demonstrates the nine possibilities.
    Each alignment has a 1- or 2-character abbreviation so, for
    example, <attr>alignment="se"</attr> is equivalent to
    <attr>alignment="southeast"</attr>.
    </p>

    <figure xml:id="diagram-alignments">
      <sidebyside width="100%">
	<image source="images/labels"/>
      </sidebyside>
      <caption>Aligning text to an anchor point.</caption>
    </figure>
    </li>

    <li><title>offset</title>

    <p>PreFigure inclues some padding between the anchor and the
    label, but you will sometimes find that you need to fine tune the
    position of a label using the <attr>offset</attr> label.  Stating
    <attr>offset="(2,-3)"</attr> will move the label two SVG units to
    the right and three units down from the position determined by the
    anchor and the alignment.
    </p>
    </li>

    <li><title>clear-background</title>

    <p>Setting <attr>clear-background="yes"</attr> causes a white
    rectangle to be filled behind the label so that it stands out from
    the background, as seen in <xref ref="diagram-clear-background"/>.
    </p>

    <figure xml:id="diagram-clear-background">
      <sidebyside width="100%">
	<image source="images/label-clear-background"/>
      </sidebyside>
      <caption>Setting <attr>clear-background="yes"</attr></caption>
    </figure>
    </li>

    <li><title>scale, rotate</title>

    <p>As illustrated in <xref ref="diagram-label-example"/>, labels
    can be scaled and rotated.
    </p>
    </li>

    <li><title>justify</title>

    <p> If a label includes more than one line, this attribute
    determines how the lines are spaced horizontally.  The possible
    values are <attr>justify="center", "left", "right"</attr> with
    <c>center</c> being the default.
    </p>
    </li>

    <li><title>interline</title>

    <p>This attribute will have a numerical value that determines the
    vertical space, in SVG units, between lines.  The default is
    <attr>interline="3"</attr>.
    </p>
    </li>
    
  </dl>
  </p>

  <p> We remind authors of one exception in that the <attr>xlabel</attr>
  and <attr>ylabel</attr> attributes of an <tag>axes</tag> element are
  interpreted as <latex/> expressions and automatically wrapped in an
  <tag>m</tag> element.
  </p>

  <assemblage>
    <title>Best practices</title>
    
    <p>Authors should think carefully about the use of labels in their
    diagrams.  In particular, it can be tempting to include lots of
    labels, possibly even long, complicated labels, in a diagram.
    However, diagrams should always be carefully integrated into a
    larger document, which means that the surrounding exposition and
    caption should help readers interpret the meaning of a diagram.
    Labels should mainly refer to graphical components and serve as a
    connection to the surrounding text.  This is especially important
    for the production of tactile diagrams, in which labels that appear
    relatively short in print can become quite long when parsed into
    braille.  So even though Cauchy's formula is indeed
    beautiful, you should probably not include it in a diagram.
    </p>
  </assemblage>
</subsection>

<subsection>
  <title> Legends </title>

  <p> PreFigure allows authors to include a legend with a diagram, as
  seen in <xref ref="diagram-legend"/> and <xref
  ref="listing-legend"/>.  A variety of graphical components may be
  included in a legend, including paths, such as the graph of a
  function, points, two-dimensional regions.  While legends will be
  faithfully rendered in a tactile diagram, it is likely they will not
  be as informative as their appearance in a non-tactile diagram.  In
  general, a
  better practice may be to place individual labels next to the
  components themselves.
  </p>

  <figure xml:id="diagram-legend">
    <sidebyside width="60%">
      <image source="images/legend"/>
    </sidebyside>
    <caption>Including a legend.</caption>
  </figure>

  <p>A <tag>legend</tag> tag defines a legend with
  <tag>item</tag> tags inside to declare the graphical components to
  include in the legend.  An <tag>item</tag> tag must include a
  <attr>ref</attr> attribute that refers to the desired graphical
  component with the attached label inside the <tag>item</tag> tag.
  </p>

  <listing xml:id="listing-legend">
    <program>
      <input><xi:include href="code/legend.xml"
      parse="text"/></input>
    </program>
    <caption>The PreFigure source for <xref
    ref="diagram-legend"/>.</caption>
  </listing>

  <p> There are a number of ways to decorate a legend:
  <dl>
    <li><title> anchor </title>
    <p>The required <attr>anchor</attr>
    attribute defines the location of the legend.</p>
    </li>

    <li><title> alignment </title>
    <p>The <attr>alignment</attr>
    attribute declares how the legend is aligned relative to the
    anchor.</p>
    </li>

    <li><title> stroke </title>
    <p>This attribute, whose value could be <c>"none"</c>, defines the
    color of the legend's border.</p>
    </li>

    <li><title> scale </title>
    <p>This attribute scales the entire legend.</p>
    </li>
    
    <li><title> vertical-skip </title>
    <p>The <attr>vertical-skip</attr>
    attribute defines the space between legend items.  The default is
    7 SVG units.</p>
    </li>
    
    <li><title> opacity </title>
    <p>This controls the opacity of the legend's white background.
    </p>
    </li>
  </dl>
</p>    

</subsection>

</section>

